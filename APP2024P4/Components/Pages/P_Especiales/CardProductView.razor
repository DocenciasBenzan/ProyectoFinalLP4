<div style="display:flex; flex-direction:row;">
    <div class="container text-center" style="width:70%;">
    @if (ProductoList != null)
    {
        @if (ProductoList.Count > 0)

        {
            <div class="row row-cols-4">
            @foreach (var p in ProductoList)
            {
                        <div class="col" style="padding:5px">
                    <div class="card" style="margin: 0 5px 0 5px; width: 18rem;">
                    <img src="@p.ImagenUrl" style="width:100%; height:250px" class="card-img-top" alt="...">
                    <div class="card-body">
                        <hr />
                        <h5 class="card-title">@p.Nombre</h5>
                        <p class="card-text">@p.PrecioText</p>
                        <a href="404" class="btn btn-primary">Ver Articulo</a>
                     </div>
                      </div>
                        </div>
            }
                    </div>
        }
    }
                </div>
    <div style="background-color:cornflowerblue; border-radius:40px; display:flex; flex-direction:row; align-content:center; flex-wrap:wrap; justify-content:center; width:30%; margin-right:100px">
        @if (ProductoList != null)
        {
            @if (ProductoList.Count > 0)
            {
                @foreach (var I in ProductoList.Take(6))
                {
                    <img src="@I.ImagenUrl" style="border-radius:30px; margin:10px 5px 10px 5px; width:250px; height:250px" class="card-img-top" alt="...">

                }
            }
        }
        else
        {
            <style>
                h1 {
                    font-size: 40px;
                    text-align: center;
                    font-family: 'Times New Roman', Times, serif;
                }
            </style>
            <h1>
                GROCERY
            </h1>

            <br />
            <h1>
                STORE
            </h1>
        }
    </div>
</div>

@code{
    public List<ProductoDto>? ProductoList { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await Consultar();
    }
    async Task Consultar()
    {
        var result = await service.Get();
        if (result.Succesd)
        {
            ProductoList = result.Data?.ToList() ?? new List<ProductoDto>();
        }
    }

}